{"version":3,"sources":["components/StockListCard/StockListCard.module.css","App.module.css","components/Search/Search.module.css","components/Search/Search.js","components/StockListCard/StockListCard.js","components/StockListContainer/StockListContainer.js","components/Header/Header.js","loadingSpinner.gif","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Search","props","useState","userInput","setUserInput","searchHandler","event","a","preventDefault","isLoading","setLoading","axios","get","info","price","addStock","stockName","data","result","stockPrice","className","classes","type","onChange","target","value","onClick","StockListCard","console","log","description","o","h","l","c","removeStock","id","StockListContainer","stockList","length","map","item","Header","App","userStockList","setUserStockList","setIsLoading","today","Date","curTime","getHours","getMinutes","getSeconds","useEffect","localStorageUserStocks","JSON","parse","localStorage","getItem","stockInfo","prevState","updatedStockList","some","stock","unshift","setItem","stringify","stockIdToRemove","filter","updateStockPrice","index","updateInterval","setInterval","searchStockPrice","stockQuery","displaySymbol","updatedStockInfo","indexToReplace","findIndex","forEach","userListStock","clearInterval","main","src","loadingSpinner","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2c0426c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stock-list-card\":\"StockListCard_stock-list-card__iScbZ\",\"basic-info\":\"StockListCard_basic-info__3OPYz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__3ZkGI\",\"loading-spinner\":\"App_loading-spinner__bc1jS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-form\":\"Search_search-form__1laBW\"};","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport classes from \"./Search.module.css\";\r\n\r\nconst Search = (props) => {\r\n  const [userInput, setUserInput] = useState();\r\n\r\n  const searchHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (props.isLoading) {\r\n      return;\r\n    }\r\n    props.setLoading(true);\r\n    const info = await axios.get(\r\n      `https://finnhub.io/api/v1/search?q=${userInput}&token=c14ongv48v6st2755it0`\r\n    );\r\n\r\n    const price = await axios.get(\r\n      `https://finnhub.io/api/v1/quote?symbol=${userInput}&token=c14ongv48v6st2755it0`\r\n    );\r\n    props.addStock({\r\n      stockName: info.data.result[0],\r\n      stockPrice: price.data,\r\n    });\r\n    props.setLoading(false);\r\n  };\r\n  return (\r\n    <div className={classes[\"search-form\"]}>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(event) => setUserInput(event.target.value)}\r\n        />\r\n        <button onClick={searchHandler}>Search</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport classes from \"./StockListCard.module.css\";\r\n\r\nconst StockListCard = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <li className={classes[\"stock-list-card\"]}>\r\n      <div className={classes[\"basic-info\"]}>\r\n        <h2>{props.description}</h2>\r\n        Open: {props.stockPrice.o}\r\n        <br />\r\n        High: {props.stockPrice.h}\r\n        <br />\r\n        Low: {props.stockPrice.l}\r\n        <br />\r\n      </div>\r\n      <h3>Price: {props.stockPrice.c}</h3>\r\n\r\n      <button\r\n        onClick={() => {\r\n          props.removeStock(props.id);\r\n        }}\r\n      >\r\n        Remove\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default StockListCard;\r\n","import React from \"react\";\r\nimport StockListCard from \"../StockListCard/StockListCard\";\r\nimport classes from \"./StockListContainer.module.css\";\r\n\r\nconst StockListContainer = (props) => {\r\n  return (\r\n    <div>\r\n      {props.stockList.length > 0 && (\r\n        <ul>\r\n          {props.stockList.map((item) => {\r\n            return (\r\n              <StockListCard\r\n                description={item.stockName.description}\r\n                stockPrice={item.stockPrice}\r\n                stockName={item.stockName}\r\n                removeStock={props.removeStock}\r\n                key={item.stockName.description}\r\n                id={item.stockName.description}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockListContainer;\r\n","import React from \"react\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Stock Watcher</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/loadingSpinner.c7d9f081.gif\";","import { useState, useEffect } from \"react\";\nimport Search from \"./components/Search/Search\";\nimport StockListContainer from \"./components/StockListContainer/StockListContainer\";\nimport Header from \"./components/Header/Header\";\n\nimport classes from \"./App.module.css\";\nimport axios from \"axios\";\n\nimport loadingSpinner from \"./loadingSpinner.gif\";\n// import instance from \"./firebase/instance\";\n\nfunction App() {\n  const [userStockList, setUserStockList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  let today = new Date();\n  let curTime =\n    today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n\n  // useEffect(() => {\n  //   instance.get(\"/results.json\").then((response) => {\n  //     console.log(response.data);\n\n  //     const databaseStocks = response.data;\n  //     const loadedStocks = [];\n\n  //     for (const key in databaseStocks) {\n  //       loadedStocks.push({\n  //         stockName: databaseStocks[key].stockName,\n  //         stockPrice: databaseStocks[key].stockPrice,\n  //         id: key,\n  //       });\n  //     }\n  //     console.log(loadedStocks);\n  //     setUserStockList(loadedStocks);\n  //   });\n  // }, []);\n  // const updateLocalStocks = (response) => {\n  //   const databaseStocks = response.data;\n  //   const loadedStocks = [];\n\n  //   for (const key in databaseStocks) {\n  //     loadedStocks.push({\n  //       stockName: databaseStocks[key].stockName,\n  //       stockPrice: databaseStocks[key].stockPrice,\n  //     });\n  //   }\n  //   console.log(loadedStocks);\n  //   setUserStockList(loadedStocks);\n  // };\n\n  // Retrieve saved user stock list from localStorage\n  useEffect(() => {\n    const localStorageUserStocks = JSON.parse(\n      localStorage.getItem(\"userStocks\")\n    );\n    console.log(localStorageUserStocks);\n    setUserStockList(localStorageUserStocks);\n  }, []);\n  const addStock = async (stockInfo) => {\n    const data = {\n      stockName: stockInfo.stockName,\n      stockPrice: stockInfo.stockPrice,\n    };\n\n    // add results obj to state array\n    setUserStockList((prevState) => {\n      let updatedStockList = [...prevState];\n\n      // duplicate checking code\n      if (\n        updatedStockList.some(\n          (stock) =>\n            stock.stockName.description === stockInfo.stockName.description\n        )\n      ) {\n        console.log(\"stock already added\");\n      } else {\n        updatedStockList.unshift(data);\n      }\n      localStorage.setItem(\"userStocks\", JSON.stringify(updatedStockList));\n\n      return updatedStockList;\n    });\n  };\n\n  const removeStock = async (stockIdToRemove) => {\n    console.log(userStockList);\n\n    setUserStockList((prevState) => {\n      let updatedStockList = [...prevState];\n      updatedStockList = updatedStockList.filter(\n        (item) => item.stockName.description !== stockIdToRemove\n      );\n      localStorage.setItem(\"userStocks\", JSON.stringify(updatedStockList));\n\n      return updatedStockList;\n    });\n  };\n\n  const updateStockPrice = (stockInfo, index) => {\n    setUserStockList((prevState) => {\n      let updatedStockList = [...prevState];\n      updatedStockList[index].stockPrice = stockInfo.stockPrice;\n      return updatedStockList;\n    });\n  };\n\n  useEffect(() => {\n    const updateInterval = setInterval(() => {\n      console.log(\"updating stocks...\");\n      if (userStockList.length > 0) {\n        //function to query all stocks in list to update prices\n        const searchStockPrice = async (stockQuery) => {\n          const price = await axios(\n            `https://finnhub.io/api/v1/quote?symbol=${stockQuery.stockName.displaySymbol}&token=c14ongv48v6st2755it0`\n          );\n          // new price from api being added into new object\n          const updatedStockInfo = {\n            stockName: stockQuery.stockName,\n            stockPrice: {\n              c: price.data.c,\n              h: price.data.h,\n              l: price.data.l,\n              o: price.data.o,\n            },\n          };\n\n          // get index of stock whose price has been updated\n          const indexToReplace = userStockList.findIndex(\n            (stock) =>\n              stock.stockName.displaySymbol ===\n              updatedStockInfo.stockName.displaySymbol\n          );\n\n          updateStockPrice(updatedStockInfo, indexToReplace);\n        };\n\n        userStockList.forEach((userListStock) =>\n          searchStockPrice(userListStock)\n        );\n      }\n    }, 10000);\n\n    // clear interval on unmount or next render, prevents multiple intervals existing at once\n    return () => {\n      clearInterval(updateInterval);\n    };\n  }, [userStockList]);\n\n  return (\n    <>\n      <Header />\n      <div className={classes.main}>\n        <Search\n          addStock={addStock}\n          setLoading={setIsLoading}\n          isLoading={isLoading}\n        />\n        last updated at: {curTime}\n        {isLoading && (\n          <img\n            className={classes[\"loading-spinner\"]}\n            src={loadingSpinner}\n            alt=\"loading\"\n          />\n        )}\n        <StockListContainer\n          stockList={userStockList}\n          removeStock={removeStock}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}